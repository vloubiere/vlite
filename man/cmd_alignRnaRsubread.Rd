% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cmd_alignRnaRsubread.R
\name{cmd_alignRnaRsubread}
\alias{cmd_alignRnaRsubread}
\title{Generate Commands for Sequence Alignment Using Rsubread}
\usage{
cmd_alignRnaRsubread(
  fq1,
  fq2 = NULL,
  output.prefix,
  genome,
  genome.idx = NULL,
  bam.output.folder = "db/bam.output.folder/",
  alignment.stats.output.folder = "db/alignment_stats/",
  Rpath = "/software/f2022/software/r/4.3.0-foss-2022b/bin/Rscript"
)
}
\arguments{
\item{fq1}{A character vector of .fq (or .fq.gz) file paths.}

\item{fq2}{For paired-end data, a character vector of .fq (or .fq.gz) file paths matching fq1 files. Default= NULL.}

\item{output.prefix}{Prefix for the output files.}

\item{genome}{Reference genome name (e.g., "mm10", "dm6"). If not provided, genome.idx must be specified.}

\item{genome.idx}{Path to the Rsubread genome index. Default= NULL.}

\item{bam.output.folder}{Directory for the output BAM file. Default= "db/bam.output.folder/".}

\item{alignment.stats.output.folder}{Directory for alignment statistics. Default= "db/alignment_stats/".}

\item{Rpath}{Path to the Rscript binary. Default= "/software/f2022/software/r/4.3.0-foss-2022b/bin/Rscript".}
}
\value{
A `data.table` with:
- `file.type`: Output file labels ("bam", "align.stats").
- `path`: Paths to the output files.
- `cmd`: Shell command to run Rsubread.
- `cores`: The number of CPU cores to use.
- `job.name`: Default name for the job = "alnRsub".
}
\description{
Creates shell commands to align sequencing reads to a reference genome using the Rsubread aligner.
Outputs a BAM file and alignment statistics.
}
\examples{
# Align single-end reads to the mm10 genome
cmd <- cmd_alignRnaRsubread(
  fq1 = "sample_R1.fq.gz",
  output.prefix = "sample",
  genome = "mm10"
)
vl_submit(cmd, execute= FALSE)

# Align paired-end reads using a custom genome index
cmd <- cmd_alignRnaRsubread(
  fq1 = "sample_R1.fq.gz",
  fq2 = "sample_R2.fq.gz",
  output.prefix = "sample",
  genome.idx = "/path/to/custom/genome/index"
)
vl_submit(cmd, execute= FALSE)

}

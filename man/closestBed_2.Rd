% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/closestBed_2.R
\name{closestBed_2}
\alias{closestBed_2}
\title{Find Closest Genomic Features Between Two Sets of Regions}
\usage{
closestBed_2(a, b, n = 1L, min.dist = 0L, max.dist = Inf, ignore.strand = TRUE)
}
\arguments{
\item{a}{Query regions in any format compatible with ?importBed().}

\item{b}{Target regions in any format compatible with ?importBed().}

\item{n}{Report all features at the n-th closest distances, including ties (e.g., if three features are
at distance 0 and two are at distance 1000, n = 1 returns the three at distance 0; n = 2 also returns the
two at distance 1000). Default = 1L.}

\item{min.dist}{Minimum absolute distance allowed between features. Features closer than this are excluded.
Default= 0L, meaning that both overlapping (dist = 0) and non-overlapping (dist > 0) features are reported.}

\item{max.dist}{Maximum absolute distance allowed between features. Features farther than this are excluded.
Default= Inf.}

\item{ignore.strand}{If set to FALSE and strand column is provided, only closest features that are on the
same strand are reported. If set to TRUE (default), closest features on both strands are reported. See details
about how the sign of the computed distance reflects the repesctive location of a and b features.}
}
\value{
A data.table with columns:
\itemize{
  \item idx.a: line index of the regions in a.
  \item idx.b: line index of the closest region(s) in b.
  \item dist: distance between closest regions (see details).
}
}
\description{
For each genomic range in a, identifies the closest genomic ranges in b.
}
\details{
**Distance Calculation**:
- For overlapping features, a distance of 0 is returned.
- For non-overlapping features, the genomic distance between their closest boundaries are returned:
  * Negative distances indicate upstream features
  * Positive distances indicate downstream features
- If strand information is missing for features in a:
  * Negative distances indicate features in 5'
  * Positive distances indicate features in 3'
}
\examples{
# Create example regions
a <- importBed(c("chr2R:100-200:+",
                 "chr2R:100-200:-"))
b <- importBed(c("chr2R:300-400:+",
                 "chr2R:300-400:-",
                 "chr2R:3000-3100:+"))

# Find single closest features
closestBed(a, b)[] # Irrespective of the strand
closestBed(a, b, ignore.strand = F)[] # Only consider features that are on the same strand
closestBed(a[, !"strand"], b)[] # No strand is provided; a features are considered as '+'

# Return all features at the second closest distance (including ties):
closestBed(a, b, n= 2)[]

}

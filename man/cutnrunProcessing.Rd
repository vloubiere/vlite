% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cutnrun_pipeline.R
\name{cutnrunProcessing}
\alias{cutnrunProcessing}
\title{Process CUT&RUN Sequencing Data}
\usage{
cutnrunProcessing(
  fq1,
  fq2 = NULL,
  output.prefix,
  genome,
  genome.idx = NULL,
  fq.output.folder = "db/fq/CUTNRUN/",
  bam.output.folder = "db/bam/CUTNRUN/",
  alignment.stats.output.folder = "db/alignment_stats/CUTNRUN/",
  cores = 8
)
}
\arguments{
\item{fq1}{Path(s) to input R1 FASTQ file(s). Required if `vbcFile` is not provided.}

\item{fq2}{Path(s) to input R2 FASTQ file(s) for paired-end data. Default: `NULL`.}

\item{output.prefix}{Prefix for output files.}

\item{genome}{Reference genome identifier (e.g., `"mm10"`, `"hg38"`).}

\item{genome.idx}{Path to Bowtie2 index. If `NULL`, derived from `genome`. Default: `NULL`.}

\item{fq.output.folder}{Directory for trimmed FASTQ files. Default: `"db/fq/CUTNRUN/"`.}

\item{bam.output.folder}{Directory for aligned BAM files. Default: `"db/bam/CUTNRUN/"`.}

\item{alignment.stats.output.folder}{Directory for alignment statistics. Default: `"db/alignment_stats/CUTNRUN/"`.}

\item{cores}{Number of CPU cores to use. Default: `8`.}
}
\value{
A `data.table` with:
- `file.type`: Types of output files.
- `path`: Paths to the output files.
- `cmd`: Shell commands for each step in the pipeline.
}
\description{
Implements a pipeline for processing CUT&RUN sequencing data, including:
1. Adapter trimming
2. Genome alignment and quality filtering

Supports single-end and paired-end data, with optional demultiplexing for VBC BAM or `.tar.gz` files.
}
\examples{
# Process paired-end data from FASTQ files
cmd <- cutnrunProcessing(
  fq1 = c("sample1_R1.fq.gz", "sample1_R1_rep2.fq.gz"),
  fq2 = c("sample1_R2.fq.gz", "sample1_R2_rep2.fq.gz"),
  output.prefix = "sample1",
  genome = "hg38",
  cores = 8
)
vl_submit(cmd, execute= FALSE)

}
\seealso{
\itemize{
  \item \code{\link{cmd_trimIlluminaAdaptors}} for adapter trimming
  \item \code{\link{cmd_alignBowtie2}} for alignment
}
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bwBinnedCoverage.R
\name{bwBinnedCoverage}
\alias{bwBinnedCoverage}
\title{Bin genomic regions and compute BigWig signal}
\usage{
bwBinnedCoverage(
  bed,
  tracks,
  center = "center",
  upstream = 5000L,
  downstream = 5000L,
  nbins = if (center == "region") c(50L, 150L, 50L) else 251L,
  ignore.strand = FALSE,
  cleanup.cache = FALSE
)
}
\arguments{
\item{bed}{A BED-formatted object compatible with `rtracklayer::import()`. Can be a file path or a GRanges object.}

\item{tracks}{Character vector of paths to BigWig (.bw) files.}

\item{center}{Character string specifying the anchor point for region resizing:
* `center`: Resize around the region center (default)
* `start`: Resize from region start
* `end`: Resize from region end
* `region`: Extend or contract entire region boundaries}

\item{upstream}{Integer specifying bases to extend upstream (default: 5000L).}

\item{downstream}{Integer specifying bases to extend downstream (default: 5000L).}

\item{nbins}{Integer vector specifying number of bins:
* For `center = 'center'/'start'/'end'"'`: Length 1 vector (default: 251L)
* For `center = 'region'"'`: Length 3 vector for upstream/body/downstream bins (default: c(50L, 150L, 50L))}

\item{ignore.strand}{Logical indicating whether to ignore strand information (default: FALSE).}

\item{cleanup.cache}{Logical. Whether to force recomputation of cached results (default: FALSE).}
}
\value{
A list of data.frames, one per BigWig file. Each matrix has:
  * Rows: Regions from the BED file
  * Columns: Signal values for each bin
  * Rownames: Region names (if present in BED)
  * Colnames: Bin center coordinates (and pseudocoordinates when center= 'region')
}
\description{
This function first bins genomic regions from a BED file, then quantifies signal from one or more BigWig files.
For each BigWig file, it returns a matrix where rows represent regions from the BED file and columns represent bins.
}
\examples{

# Load the TxDb object

# Sample 100 random genes
all_genes <- genes(TxDb.Dmelanogaster.UCSC.dm6.ensGene)
set.seed(42)
random_genes <- all_genes[sample(length(all_genes), 100)]

# Example tracks
tracks <- c("/groups/stark/vloubiere/projects/epigenetic_cancer/db/bw/ATAC/ATAC_PH18_merge.bw",
            "/groups/stark/vloubiere/projects/epigenetic_cancer/db/bw/ATAC/ATAC_PHD11_merge.bw")

# Compute
binnedCov <- bwBinnedCoverage(random_genes, tracks)

}

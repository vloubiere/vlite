% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cmd_countPROseqReads.R
\name{cmd_countPROseqReads}
\alias{cmd_countPROseqReads}
\title{Generate Commands for Counting PRO-seq reads}
\usage{
cmd_countPROseqReads(
  umi.count.file,
  annotation.file,
  feature = NULL,
  output.prefix = NULL,
  count.tables.output.folder = "db/count_tables/PROseq/",
  Rpath = "/software/f2022/software/r/4.3.0-foss-2022b/bin/Rscript"
)
}
\arguments{
\item{umi.count.file}{Path to the input UMI count file. Must be a single `.txt` file.}

\item{annotation.file}{Path to the annotation file in `.rds` format containing the following columns:
seqnames, start, end, strand, cluster.id.}

\item{feature}{Name of the genomic features in the annotation.file (promoter, body...). If not provided, it is derived from the `annotation.file` name.}

\item{output.prefix}{Prefix for the output files. If not provided, it is derived from the `umi.count.file` name.}

\item{count.tables.output.folder}{Directory for the output counts table. Default: `db/counts/PROseq/`.}

\item{Rpath}{Path to the Rscript binary. Default: `/software/f2022/software/r/4.3.0-foss-2022b/bin/Rscript`.}
}
\value{
A `data.table` with the following columns:
- `file.type`: Label for the output file (`"count.table"`).
- `path`: Path to the output counts table.
- `cmd`: Shell command to run the PRO-seq read counting pipeline.
}
\description{
This function generates shell commands to count PRO-seq reads from a UMI count file using a .rds genomic annotation file.
The output includes a counts table with assigned reads for the specified genomic features.
}
\examples{
# Example usage
cmd <- cmd_countPROseqReads(
  umi.count.file = "example_umi_counts.txt",
  annotation.file = "/groups/stark/vloubiere/projects/PROseq_pipeline/db/annotations/mm10_promoters.rds",
  feature = "promoters",
  output.prefix = "example_output"
)
print(cmd)

}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/collapseBed.R
\name{collapseBed}
\alias{collapseBed}
\title{Collapse or Merge Overlapping Genomic Ranges}
\usage{
collapseBed(bed, max.gap = 0L, return.idx.only = FALSE, ignore.strand = TRUE)
}
\arguments{
\item{bed}{Input regions in any format compatible with ?importBed().}

\item{max.gap}{Maximum distance between features to be merged:
\itemize{
  \item Positive value: Merges features separated by ≤ max.gap bases
  \item Zero: Merges only touching or overlapping features
  \item Negative value: Requires overlap of ≥ |max.gap| bases to merge
}
Default= 0L (merge touching or overlapping features).}

\item{return.idx.only}{If set to TRUE, returns the indices of merged regions
instead of collapsing them. Default= FALSE.}

\item{ignore.strand}{If set to FALSE, only overlapping regions that are on the same strand
are merged. If set to TRUE (default), regions are merged irrespective of their strand.}
}
\value{
If return.idx.only = FALSE: a gr data.table with columns:
\itemize{
  \item seqnames: chromosome or sequence name.
  \item start: start position of merged region.
  \item end: end position of merged region.
  \item strand: strand (if present in input and ignore.strand = FALSE).
}
If return.idx.only = TRUE: a vector of run-length type id indicating which regions
belong to the same contig and could be merged.
}
\description{
Merges overlapping genomic ranges.
}
\examples{
# Create example regions
bed <- importBed(c("chr2R:1000-2000:+", "chr2R:1500-2500:+", "chr2R:1500-2500:-", "chr2R:3000-4000:+"))

# Merge overlapping regions with the same strand (3 merge regions)
collapseBed(bed)

# Get merge indices instead of merging ()
collapseBed(bed, return.idx.only = TRUE)

# Ignore strand (2 merged regions)
collapseBed(bed, ignore.strand = TRUE)

# Merge regions within 450/500bp of each other
collapseBed(bed, max.gap = 450) # 3 merged regions
collapseBed(bed, max.gap = 500) # 2 merged regions

# Merge only regions with at least 600/100bp overlap
collapseBed(bed, max.gap = -600) # 4 merged regions
collapseBed(bed, max.gap = -100) # 3 merged regions

}

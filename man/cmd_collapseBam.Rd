% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cmd_collapseBam.R
\name{cmd_collapseBam}
\alias{cmd_collapseBam}
\title{Collapse BAM Files and Generate Statistics}
\usage{
cmd_collapseBam(
  bam,
  output.prefix = NULL,
  collapsed.bam.output.folder = "db/bam/collapsed/",
  collapsed.stats.output.folder = "db/alignment_stats/",
  cores = 8
)
}
\arguments{
\item{bam}{Path to the input BAM file. Only a single BAM file is allowed.}

\item{output.prefix}{Prefix for the output files. If not provided, it is derived from the input BAM filename.}

\item{collapsed.bam.output.folder}{Directory for the collapsed BAM file. Default= "db/bam/collapsed/".}

\item{collapsed.stats.output.folder}{Directory for the alignment statistics file. Default= "db/alignment_stats/".}

\item{cores}{Number of CPU cores to use for samtools processing. Default= 8.}
}
\value{
A data.table with:
- `file.type`: Output file labels ("collapsed.bam", "collapsed.stats").
- `path`: Paths to the output files.
- `cmd`: Shell command to run the collapsing and statistics generation pipeline.
- `cores`: The number of CPU cores to use.
- `job.name`: Default name for the job = "collBam".
}
\description{
Creates shell commands to collapse duplicate reads, sort alignments, and generate alignment statistics
for a single BAM file using `samtools`.
}
\examples{
# Collapse a BAM file and generate statistics
cmd <- cmd_collapseBam(
  bam = "/data/bam/sample.bam",
  output.prefix = "sample1"
)
vl_submit(cmd, execute= FALSE)

}

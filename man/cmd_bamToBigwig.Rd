% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cmd_bamToBigwig.R
\name{cmd_bamToBigwig}
\alias{cmd_bamToBigwig}
\title{Convert BAM to BigWig Format}
\usage{
cmd_bamToBigwig(
  bam,
  layout,
  output.prefix = NULL,
  extend.PE.fragments = FALSE,
  extsize = 0,
  bw.output.folder = "db/bw/",
  Rpath = "/software/f2022/software/r/4.3.0-foss-2022b/bin/Rscript"
)
}
\arguments{
\item{bam}{Path to the input BAM file. Only a single BAM file is allowed.}

\item{layout}{Sequencing layout, either `"SINGLE"` or `"PAIRED"`.}

\item{output.prefix}{Prefix for the output BigWig file. If not provided, it is derived from the input BAM filename.}

\item{extend.PE.fragments}{Logical. Whether to extend paired-end fragments. Default: `FALSE`.}

\item{extsize}{Numeric. Read extension size. Default: `0` (no extension).}

\item{bw.output.folder}{Directory for the BigWig file. Default: `"db/bw/"`.}

\item{Rpath}{Path to the Rscript binary. Default: `"/software/f2022/software/r/4.3.0-foss-2022b/bin/Rscript"`.}
}
\value{
A `data.table` with:
- `file.type`: Output file label (`"bw"`).
- `path`: Path to the BigWig file.
- `cmd`: Shell command to run the BAM to BigWig conversion.
}
\description{
Creates shell commands to convert a BAM file to BigWig format. Supports single-end and paired-end sequencing data,
with optional fragment extension for paired-end reads.
}
\examples{
# Convert a BAM file to BigWig format for single-end data
cmd <- cmd_bamToBigwig(
  bam = "/data/bam/sample.bam",
  layout = "SINGLE"
)
vl_submit(cmd, execute= FALSE)

# Convert a BAM file to BigWig format for paired-end data with fragment extension
cmd <- cmd_bamToBigwig(
  bam = "/data/bam/sample.bam",
  layout = "PAIRED",
  extend.PE.fragments = TRUE
)
vl_submit(cmd, execute= FALSE)

}

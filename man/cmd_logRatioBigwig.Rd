% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cmd_logRatioBigwig.R
\name{cmd_logRatioBigwig}
\alias{cmd_logRatioBigwig}
\title{Call Peaks from bigWig Files}
\usage{
cmd_logRatioBigwig(
  experiment.bed.file,
  input.bed.file,
  genome,
  gaussian.smoothing = FALSE,
  pseudocount = NULL,
  bed.subset = NULL,
  bins.width = 100L,
  output.prefix,
  output.folder = "db/bw/",
  Rpath = "/software/f2022/software/r/4.3.0-foss-2022b/bin/Rscript"
)
}
\arguments{
\item{experiment.bed.file}{Path to the bed file with experiment reads (must be unique).}

\item{input.bed.file}{Path to the bed file with input/control reads (must be unique).}

\item{genome}{BSgenome name.}

\item{gaussian.smoothing}{If set to TRUE, applies Gaussian smoothing after read-depth normalization. Default= FALSE.}

\item{pseudocount}{Numeric value to add as a pseudocount if zeros are present after read-depth normalization and
optional smoothing. If NULL, the 0.01 percentile of non-zero values is used. Default is NULL.}

\item{bed.subset}{Optional path to a bed file. If provided, only reads overlapping these regions on the same
strand are used. Default= NULL (no filtering).}

\item{bins.width}{Integer specifying the width using for the sliding window. Default= 100L.}

\item{output.prefix}{Prefix for output file. If not provided, it is derived from the experiment bed filename.}

\item{output.folder}{Output directory for the log2 ratio bw file. Default: "db/bw/".}
}
\value{
A data.table with:
- `file.type`: Output file label "bw".
- `path`: Path to the output file.
- `cmd`: Shell command to run.
- `job.name`: Default name for the job = "bwLogRatio".
}
\description{
Generates a shell command to compute the log2 ratio between two bed files using a sliding window.
Coverage is computed and normalized for sequencing depth, followed by optional Gaussian smoothing.
A pseudocount is added if zeros are present, and log2 ratios are then calculated.
}
\examples{
cmd <- cmd_logRatioBigwig(
  experiment.bed.file = "/data/exp.bed",
  input.bed.file = "/data/input.bed",
)
vl_submit(cmd, execute = FALSE)

}

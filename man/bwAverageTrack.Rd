% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bwAverageTrack.R
\name{bwAverageTrack}
\alias{bwAverageTrack}
\title{Plot Average BigWig Signal Tracks}
\usage{
bwAverageTrack(
  bed,
  by = NULL,
  tracks,
  names = function(x) gsub("(.*)[.].*$", "\\\\1", basename(tracks)),
  center = "center",
  center.name = ifelse(center != "region", "Center", "Start"),
  region.end = "End",
  upstream = 5000L,
  downstream = 5000L,
  nbins = if (center == "region") c(50L, 150L, 50L) else 251L,
  ignore.strand = FALSE,
  plot = TRUE,
  add = FALSE,
  col.palette = rainbow(7)[-7],
  adj.mean.color = 0.8,
  adj.se.color = 0.3,
  xlim = NULL,
  ylim = NULL,
  xlab = "Genomic distance",
  ylab = "Mean signal",
  legend = TRUE,
  legend.x = par("usr")[2],
  legend.y = par("usr")[4],
  legend.cex = 0.7,
  cleanup.cache = FALSE
)
}
\arguments{
\item{bed}{A GRanges or data.frame object containing genomic regions of interest}

\item{by}{Optional factor for grouping the data (e.g., by condition or feature type)}

\item{tracks}{Character vector of paths to BigWig files}

\item{names}{Function or character vector to generate track names. Default extracts names from file paths}

\item{center}{Method for centering profiles: "center" for point-centric or "region" for meta-gene like plots}

\item{center.name}{Label for the center point in the plot (default: "center" or "Start", when center=="region")}

\item{region.end}{When center is set to region, label for the end of the region. Default= "End".}

\item{upstream}{Integer. Distance upstream of center to plot (default: 5000)}

\item{downstream}{Integer. Distance downstream of center to plot (default: 5000)}

\item{nbins}{Integer vector. Number of bins for signal averaging. For center="region", expects c(upstream_bins, body_bins, downstream_bins). For center="center", single integer (default: 251)}

\item{ignore.strand}{Logical. If TRUE, ignores strand information (default: FALSE)}

\item{plot}{Should the plot be generated? Default= TRUE.}

\item{add}{Logical. If TRUE, adds to existing plot (default: FALSE)}

\item{col.palette}{Vector of colors for the tracks (default: rainbow palette)}

\item{adj.mean.color}{Numeric. Adjustment factor for mean line color transparency (default: 0.8)}

\item{adj.se.color}{Numeric. Adjustment factor for standard error area transparency (default: 0.3)}

\item{xlim}{Numeric vector. X-axis limits (default: NULL, automatically determined)}

\item{ylim}{Numeric vector. Y-axis limits (default: NULL, automatically determined)}

\item{xlab}{X axis label (default: Genomic distance)}

\item{ylab}{Y axis label (default: Mean signal)}

\item{legend}{Logical. Whether to display legend (default: TRUE)}

\item{legend.x}{x position for legend. Default= par("usr")[2].}

\item{legend.y}{y position for legend. Default= par("usr")[4].}

\item{legend.cex}{Numeric. Legend text size (default: 0.7)}

\item{cleanup.cache}{Logical. Whether to force recomputation of cached results (default: FALSE)}

\item{legend.pos}{Character. Legend position (default: "topright")}
}
\value{
Plots the average signal profile and invisibly returns NULL
}
\description{
Creates a visualization of average signal profiles from BigWig files around genomic features,
with optional grouping and customizable appearance.
}
\examples{
# Sample 200 random genes
all_genes <- genes(TxDb.Dmelanogaster.UCSC.dm6.ensGene)
set.seed(42)
random_genes <- all_genes[sample(length(all_genes), 200)]

# Example tracks
tracks <- c("/groups/stark/vloubiere/projects/epigenetic_cancer/db/bw/ATAC/ATAC_PH18_merge.bw",
            "/groups/stark/vloubiere/projects/epigenetic_cancer/db/bw/ATAC/ATAC_PHD11_merge.bw")

# Parameters for a nice layout
vl_par()

# Simple example with two tracks
meanSignal <- bwAverageTrack(bed = random_genes,
                             tracks = tracks,
                             center = "start",
                             upstream = 5000,
                             downstream = 5000,
                             nbins = 251L)

# Two tracks and two subgroups of regions
meanSignal <- bwAverageTrack(bed = random_genes,
                             by = c(rep("group.a", 50), rep("group.b", 150)),
                             tracks = tracks,
                             center = "start",
                             upstream = 5000,
                             downstream = 5000,
                             nbins = 251L)
abline(v= 0, lty= 2)

# Example with anchored region (Genomic distance is now a pseudodistance)
meanSignal <- bwAverageTrack(bed = random_genes,
                             tracks = tracks,
                             center = "region",
                             upstream = 5000,
                             downstream = 5000)
abline(v= 0, lty= 2)

}

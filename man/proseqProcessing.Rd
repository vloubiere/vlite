% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/proseqProcessing.R
\name{proseqProcessing}
\alias{proseqProcessing}
\title{Process PRO-Seq Sequencing Data}
\usage{
proseqProcessing(
  fq1,
  output.prefix,
  ref.genome,
  ref.genome.idx = NULL,
  spike.genome,
  spike.genome.idx = NULL,
  ref.gtf = NULL,
  fq.output.folder = "db/fq/PROSeq/",
  bam.output.folder = "db/bam/PROSeq/",
  alignment.stats.output.folder = "db/alignment_stats/PROSeq/",
  counts.output.folder = "db/counts/PROSeq/",
  counts.stats.output.folder = "db/stats/PROSeq/",
  bw.output.folder = "db/bw/PROSeq/",
  Rpath = "/software/f2022/software/r/4.3.0-foss-2022b/bin/Rscript",
  cores = 8
)
}
\arguments{
\item{fq1}{A character vector of .fq (or .fq.gz) file paths. Note that the UMI sequences should be appended to the readIDs (see ?cmd_demultiplexVBCfile()), and that read 2 are not used.}

\item{output.prefix}{Prefix for output files.}

\item{ref.genome}{Reference genome identifier (e.g., "mm10", "hg38").}

\item{ref.genome.idx}{Path to the Bowtie1 index for the reference genome. If NULL, derived from ref.genome. Default= NULL.}

\item{spike.genome}{Spike-in genome identifier.}

\item{spike.genome.idx}{Path to the Bowtie1 index for the spike-in genome. Default= NULL.}

\item{ref.gtf}{Path to the GTF annotation file for the reference genome. Default= NULL.}

\item{fq.output.folder}{Directory for trimmed FASTQ files. Default= "db/fq/PROSeq/".}

\item{bam.output.folder}{Directory for aligned BAM files. Default= "db/bam/PROSeq/".}

\item{alignment.stats.output.folder}{Directory for alignment statistics. Default= "db/alignment_stats/PROSeq/".}

\item{counts.output.folder}{Directory for UMI counts. Default= "db/counts/PROSeq/".}

\item{counts.stats.output.folder}{Directory for UMI count statistics. Default= "db/stats/PROSeq/".}

\item{bw.output.folder}{Directory for BigWig files. Default= "db/bw/PROSeq/".}

\item{Rpath}{Path to the Rscript binary. Default= "/software/f2022/software/r/4.3.0-foss-2022b/bin/Rscript".}

\item{cores}{Number of CPU cores to use. Default= 8.}
}
\value{
A data.table with:
- `file.types`: Types of output files.
- `path`: Paths to the output files.
- `cmd`: Shell commands for each step in the pipeline.
}
\description{
Implements a pipeline for processing PRO-Seq sequencing data, including:
1. Adapter trimming
2. Genome alignment (reference and spike-in)
3. UMI counting
4. BigWig track generation
}
\examples{
# Process PRO-Seq sequencing data
cmd <- proseqProcessing(
  fq1 = c("sample1_R1.fq.gz", "sample1_R1_rep2.fq.gz"),
  output.prefix = "sample1",
  ref.genome = "mm10",
  spike.genome = "dm6",
  ref.gtf = "/data/annotations/mm10.gtf",
  cores = 8
)
vl_submit(cmd, execute= FALSE)

# Next, reads should be counted for genomic features of interest using ?cmd_countPROseqReads()
# Then, diff analysis should be performed using ?cmd_DESeq2_PROseq()

}
\seealso{
\itemize{
  \item \code{\link{cmd_trimProseqAdaptors}} for adapter trimming
  \item \code{\link{cmd_alignBowtie}} for alignment
  \item \code{\link{cmd_exractUnalignedReads}} for extracting unaligned reads
  \item \code{\link{cmd_umiToBigwigProseq}} for UMI counting and BigWig generation
}
}
